{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Aarav Gupta\\\\Documents\\\\Programs\\\\Website Development\\\\Periodic Table Website\\\\periodic-table-website\\\\src\\\\ReactComponents\\\\PeriodicTable.js\";\nimport React from \"react\";\nimport Element from \"./Element\";\nimport data from \"../PeriodicDetails\";\nimport Groups from \"./Groups\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PeriodicTable({\n  colorMode\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `periodic-table ${colorMode}`,\n    children: [data.elements.map(element => /*#__PURE__*/_jsxDEV(Element, {\n      elementNumber: element.number\n    }, element.number, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)), data.Groups.map(groups => {})]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = PeriodicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PeriodicTable\");","map":{"version":3,"sources":["D:/Users/Aarav Gupta/Documents/Programs/Website Development/Periodic Table Website/periodic-table-website/src/ReactComponents/PeriodicTable.js"],"names":["React","Element","data","Groups","PeriodicTable","colorMode","elements","map","element","number","groups"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AACA,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAsC;AACnD,sBACE;AAAK,IAAA,SAAS,EAAG,kBAAiBA,SAAU,EAA5C;AAAA,eACGH,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAmBC,OAAD,iBACjB,QAAC,OAAD;AAA8B,MAAA,aAAa,EAAEA,OAAO,CAACC;AAArD,OAAcD,OAAO,CAACC,MAAtB;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAIGP,IAAI,CAACC,MAAL,CAAYI,GAAZ,CAAiBG,MAAD,IAAY,CAAE,CAA9B,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;KATuBN,a","sourcesContent":["import React from \"react\";\r\nimport Element from \"./Element\";\r\nimport data from \"../PeriodicDetails\";\r\nimport Groups from \"./Groups\";\r\nexport default function PeriodicTable({ colorMode }) {\r\n  return (\r\n    <div className={`periodic-table ${colorMode}`}>\r\n      {data.elements.map((element) => (\r\n        <Element key={element.number} elementNumber={element.number} />\r\n      ))}\r\n      {data.Groups.map((groups) => {})}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}